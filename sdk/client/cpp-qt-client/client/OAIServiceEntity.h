/**
 * Lethean VPN Api
 * Distributed Virtual Private Marketplace
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceEntity.h
 *
 * 
 */

#ifndef OAIServiceEntity_H
#define OAIServiceEntity_H

#include <QJsonObject>

#include "OAICertificatesEntity.h"
#include "OAIProxySettingsEntity.h"
#include "OAITimeRangeEntity.h"
#include "OAIVpnSettingsEntity.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceEntity : public OAIObject {
public:
    OAIServiceEntity();
    OAIServiceEntity(QString json);
    ~OAIServiceEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getCost() const;
    void setCost(const QString &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    double getFirstPrePaidMinutes() const;
    void setFirstPrePaidMinutes(const double &first_pre_paid_minutes);
    bool is_first_pre_paid_minutes_Set() const;
    bool is_first_pre_paid_minutes_Valid() const;

    double getFirstVerificationsNeeded() const;
    void setFirstVerificationsNeeded(const double &first_verifications_needed);
    bool is_first_verifications_needed_Set() const;
    bool is_first_verifications_needed_Valid() const;

    double getSubsequentPrePaidMinutes() const;
    void setSubsequentPrePaidMinutes(const double &subsequent_pre_paid_minutes);
    bool is_subsequent_pre_paid_minutes_Set() const;
    bool is_subsequent_pre_paid_minutes_Valid() const;

    double getSubsequentVerificationsNeeded() const;
    void setSubsequentVerificationsNeeded(const double &subsequent_verifications_needed);
    bool is_subsequent_verifications_needed_Set() const;
    bool is_subsequent_verifications_needed_Valid() const;

    bool isAllowRefunds() const;
    void setAllowRefunds(const bool &allow_refunds);
    bool is_allow_refunds_Set() const;
    bool is_allow_refunds_Valid() const;

    double getDownloadSpeed() const;
    void setDownloadSpeed(const double &download_speed);
    bool is_download_speed_Set() const;
    bool is_download_speed_Valid() const;

    double getUploadSpeed() const;
    void setUploadSpeed(const double &upload_speed);
    bool is_upload_speed_Set() const;
    bool is_upload_speed_Valid() const;

    QList<OAIProxySettingsEntity> getProxy() const;
    void setProxy(const QList<OAIProxySettingsEntity> &proxy);
    bool is_proxy_Set() const;
    bool is_proxy_Valid() const;

    QList<OAIVpnSettingsEntity> getVpn() const;
    void setVpn(const QList<OAIVpnSettingsEntity> &vpn);
    bool is_vpn_Set() const;
    bool is_vpn_Valid() const;

    OAITimeRangeEntity getValidity() const;
    void setValidity(const OAITimeRangeEntity &validity);
    bool is_validity_Set() const;
    bool is_validity_Valid() const;

    bool isDisable() const;
    void setDisable(const bool &disable);
    bool is_disable_Set() const;
    bool is_disable_Valid() const;

    QList<OAICertificatesEntity> getCertificates() const;
    void setCertificates(const QList<OAICertificatesEntity> &certificates);
    bool is_certificates_Set() const;
    bool is_certificates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    double first_pre_paid_minutes;
    bool m_first_pre_paid_minutes_isSet;
    bool m_first_pre_paid_minutes_isValid;

    double first_verifications_needed;
    bool m_first_verifications_needed_isSet;
    bool m_first_verifications_needed_isValid;

    double subsequent_pre_paid_minutes;
    bool m_subsequent_pre_paid_minutes_isSet;
    bool m_subsequent_pre_paid_minutes_isValid;

    double subsequent_verifications_needed;
    bool m_subsequent_verifications_needed_isSet;
    bool m_subsequent_verifications_needed_isValid;

    bool allow_refunds;
    bool m_allow_refunds_isSet;
    bool m_allow_refunds_isValid;

    double download_speed;
    bool m_download_speed_isSet;
    bool m_download_speed_isValid;

    double upload_speed;
    bool m_upload_speed_isSet;
    bool m_upload_speed_isValid;

    QList<OAIProxySettingsEntity> proxy;
    bool m_proxy_isSet;
    bool m_proxy_isValid;

    QList<OAIVpnSettingsEntity> vpn;
    bool m_vpn_isSet;
    bool m_vpn_isValid;

    OAITimeRangeEntity validity;
    bool m_validity_isSet;
    bool m_validity_isValid;

    bool disable;
    bool m_disable_isSet;
    bool m_disable_isValid;

    QList<OAICertificatesEntity> certificates;
    bool m_certificates_isSet;
    bool m_certificates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceEntity)

#endif // OAIServiceEntity_H
