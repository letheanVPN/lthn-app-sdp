/**
 * Lethean VPN Api
 * Distributed Virtual Private Marketplace
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CertificatesEntity } from './certificatesEntity';
import { TimeRangeEntity } from './timeRangeEntity';
import { VpnSettingsEntity } from './vpnSettingsEntity';
import { ProxySettingsEntity } from './proxySettingsEntity';


export interface ServiceEntity { 
    /**
     * ID of the service
     */
    id: string;
    /**
     * Name of the service
     */
    name: string;
    /**
     * Type of the service
     */
    type: ServiceEntity.TypeEnum;
    /**
     * Per minute Cost of the service
     */
    cost: string;
    /**
     * Amount of pre-paid minutes for first payment
     */
    firstPrePaidMinutes?: number;
    /**
     * Number of verifications needed for first payment
     */
    firstVerificationsNeeded?: number;
    /**
     * Amount of pre-paid minutes for subsequent payments
     */
    subsequentPrePaidMinutes?: number;
    /**
     * Number of verifications needed for subsequent payments
     */
    subsequentVerificationsNeeded?: number;
    /**
     * Whether or not refunds are allowed
     */
    allowRefunds?: boolean;
    /**
     * Service download speed in Mbits
     */
    downloadSpeed: number;
    /**
     * Service upload speed in Mbits
     */
    uploadSpeed: number;
    /**
     * array containing Proxy related settings. only available if service is of type proxy, null otherwise
     */
    proxy?: Array<ProxySettingsEntity>;
    /**
     * array containing VPN related settings. only available if service is of type vpn, null otherwise
     */
    vpn?: Array<VpnSettingsEntity>;
    validity?: TimeRangeEntity;
    /**
     * disable or not the service
     */
    disable: boolean;
    /**
     * inside each service, there should be a field named certificates that has a list of IDs, referencing the certificates at the provider level.
     */
    certificates?: Array<CertificatesEntity>;
}
export namespace ServiceEntity {
    export type TypeEnum = 'vpn' | 'proxy';
    export const TypeEnum = {
        Vpn: 'vpn' as TypeEnum,
        Proxy: 'proxy' as TypeEnum
    };
}


