/*
 * Lethean VPM
 *
 * Distributed Virtual Private Marketplace
 *
 * API version: 1
 * Contact: contact@lethean.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lethean-vpm

import (
	"encoding/json"
)

// ServiceEntity struct for ServiceEntity
type ServiceEntity struct {
	// ID of the service
	Id *string `json:"id,omitempty"`
	// Name of the service
	Name string `json:"name"`
	// Type of the service
	Type string `json:"type"`
	// Per minute Cost of the service
	Cost string `json:"cost"`
	// Amount of pre-paid minutes for first payment
	FirstPrePaidMinutes *float32 `json:"firstPrePaidMinutes,omitempty"`
	// Number of verifications needed for first payment
	FirstVerificationsNeeded *float32 `json:"firstVerificationsNeeded,omitempty"`
	// Amount of pre-paid minutes for subsequent payments
	SubsequentPrePaidMinutes *float32 `json:"subsequentPrePaidMinutes,omitempty"`
	// Number of verifications needed for subsequent payments
	SubsequentVerificationsNeeded *float32 `json:"subsequentVerificationsNeeded,omitempty"`
	// Whether or not refunds are allowed
	AllowRefunds *bool `json:"allowRefunds,omitempty"`
	// Service download speed in Mbits
	DownloadSpeed float32 `json:"downloadSpeed"`
	// Service upload speed in Mbits
	UploadSpeed float32 `json:"uploadSpeed"`
	// array containing Proxy related settings. only available if service is of type proxy, null otherwise
	Proxy *[]ProxySettingsEntity `json:"proxy,omitempty"`
	// array containing VPN related settings. only available if service is of type vpn, null otherwise
	Vpn *[]VpnSettingsEntity `json:"vpn,omitempty"`
	Validity *TimeRangeEntity `json:"validity,omitempty"`
	// disable or not the service
	Disable bool `json:"disable"`
	// inside each service, there should be a field named certificates that has a list of IDs, referencing the certificates at the provider level.
	Certificates *[]CertificatesEntity `json:"certificates,omitempty"`
}

// NewServiceEntity instantiates a new ServiceEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceEntity(name string, type_ string, cost string, downloadSpeed float32, uploadSpeed float32, disable bool) *ServiceEntity {
	this := ServiceEntity{}
	this.Name = name
	this.Type = type_
	this.Cost = cost
	this.DownloadSpeed = downloadSpeed
	this.UploadSpeed = uploadSpeed
	this.Disable = disable
	return &this
}

// NewServiceEntityWithDefaults instantiates a new ServiceEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceEntityWithDefaults() *ServiceEntity {
	this := ServiceEntity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceEntity) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceEntity) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceEntity) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *ServiceEntity) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceEntity) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *ServiceEntity) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServiceEntity) SetType(v string) {
	o.Type = v
}

// GetCost returns the Cost field value
func (o *ServiceEntity) GetCost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetCostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cost, true
}

// SetCost sets field value
func (o *ServiceEntity) SetCost(v string) {
	o.Cost = v
}

// GetFirstPrePaidMinutes returns the FirstPrePaidMinutes field value if set, zero value otherwise.
func (o *ServiceEntity) GetFirstPrePaidMinutes() float32 {
	if o == nil || o.FirstPrePaidMinutes == nil {
		var ret float32
		return ret
	}
	return *o.FirstPrePaidMinutes
}

// GetFirstPrePaidMinutesOk returns a tuple with the FirstPrePaidMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetFirstPrePaidMinutesOk() (*float32, bool) {
	if o == nil || o.FirstPrePaidMinutes == nil {
		return nil, false
	}
	return o.FirstPrePaidMinutes, true
}

// HasFirstPrePaidMinutes returns a boolean if a field has been set.
func (o *ServiceEntity) HasFirstPrePaidMinutes() bool {
	if o != nil && o.FirstPrePaidMinutes != nil {
		return true
	}

	return false
}

// SetFirstPrePaidMinutes gets a reference to the given float32 and assigns it to the FirstPrePaidMinutes field.
func (o *ServiceEntity) SetFirstPrePaidMinutes(v float32) {
	o.FirstPrePaidMinutes = &v
}

// GetFirstVerificationsNeeded returns the FirstVerificationsNeeded field value if set, zero value otherwise.
func (o *ServiceEntity) GetFirstVerificationsNeeded() float32 {
	if o == nil || o.FirstVerificationsNeeded == nil {
		var ret float32
		return ret
	}
	return *o.FirstVerificationsNeeded
}

// GetFirstVerificationsNeededOk returns a tuple with the FirstVerificationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetFirstVerificationsNeededOk() (*float32, bool) {
	if o == nil || o.FirstVerificationsNeeded == nil {
		return nil, false
	}
	return o.FirstVerificationsNeeded, true
}

// HasFirstVerificationsNeeded returns a boolean if a field has been set.
func (o *ServiceEntity) HasFirstVerificationsNeeded() bool {
	if o != nil && o.FirstVerificationsNeeded != nil {
		return true
	}

	return false
}

// SetFirstVerificationsNeeded gets a reference to the given float32 and assigns it to the FirstVerificationsNeeded field.
func (o *ServiceEntity) SetFirstVerificationsNeeded(v float32) {
	o.FirstVerificationsNeeded = &v
}

// GetSubsequentPrePaidMinutes returns the SubsequentPrePaidMinutes field value if set, zero value otherwise.
func (o *ServiceEntity) GetSubsequentPrePaidMinutes() float32 {
	if o == nil || o.SubsequentPrePaidMinutes == nil {
		var ret float32
		return ret
	}
	return *o.SubsequentPrePaidMinutes
}

// GetSubsequentPrePaidMinutesOk returns a tuple with the SubsequentPrePaidMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetSubsequentPrePaidMinutesOk() (*float32, bool) {
	if o == nil || o.SubsequentPrePaidMinutes == nil {
		return nil, false
	}
	return o.SubsequentPrePaidMinutes, true
}

// HasSubsequentPrePaidMinutes returns a boolean if a field has been set.
func (o *ServiceEntity) HasSubsequentPrePaidMinutes() bool {
	if o != nil && o.SubsequentPrePaidMinutes != nil {
		return true
	}

	return false
}

// SetSubsequentPrePaidMinutes gets a reference to the given float32 and assigns it to the SubsequentPrePaidMinutes field.
func (o *ServiceEntity) SetSubsequentPrePaidMinutes(v float32) {
	o.SubsequentPrePaidMinutes = &v
}

// GetSubsequentVerificationsNeeded returns the SubsequentVerificationsNeeded field value if set, zero value otherwise.
func (o *ServiceEntity) GetSubsequentVerificationsNeeded() float32 {
	if o == nil || o.SubsequentVerificationsNeeded == nil {
		var ret float32
		return ret
	}
	return *o.SubsequentVerificationsNeeded
}

// GetSubsequentVerificationsNeededOk returns a tuple with the SubsequentVerificationsNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetSubsequentVerificationsNeededOk() (*float32, bool) {
	if o == nil || o.SubsequentVerificationsNeeded == nil {
		return nil, false
	}
	return o.SubsequentVerificationsNeeded, true
}

// HasSubsequentVerificationsNeeded returns a boolean if a field has been set.
func (o *ServiceEntity) HasSubsequentVerificationsNeeded() bool {
	if o != nil && o.SubsequentVerificationsNeeded != nil {
		return true
	}

	return false
}

// SetSubsequentVerificationsNeeded gets a reference to the given float32 and assigns it to the SubsequentVerificationsNeeded field.
func (o *ServiceEntity) SetSubsequentVerificationsNeeded(v float32) {
	o.SubsequentVerificationsNeeded = &v
}

// GetAllowRefunds returns the AllowRefunds field value if set, zero value otherwise.
func (o *ServiceEntity) GetAllowRefunds() bool {
	if o == nil || o.AllowRefunds == nil {
		var ret bool
		return ret
	}
	return *o.AllowRefunds
}

// GetAllowRefundsOk returns a tuple with the AllowRefunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetAllowRefundsOk() (*bool, bool) {
	if o == nil || o.AllowRefunds == nil {
		return nil, false
	}
	return o.AllowRefunds, true
}

// HasAllowRefunds returns a boolean if a field has been set.
func (o *ServiceEntity) HasAllowRefunds() bool {
	if o != nil && o.AllowRefunds != nil {
		return true
	}

	return false
}

// SetAllowRefunds gets a reference to the given bool and assigns it to the AllowRefunds field.
func (o *ServiceEntity) SetAllowRefunds(v bool) {
	o.AllowRefunds = &v
}

// GetDownloadSpeed returns the DownloadSpeed field value
func (o *ServiceEntity) GetDownloadSpeed() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DownloadSpeed
}

// GetDownloadSpeedOk returns a tuple with the DownloadSpeed field value
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetDownloadSpeedOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DownloadSpeed, true
}

// SetDownloadSpeed sets field value
func (o *ServiceEntity) SetDownloadSpeed(v float32) {
	o.DownloadSpeed = v
}

// GetUploadSpeed returns the UploadSpeed field value
func (o *ServiceEntity) GetUploadSpeed() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UploadSpeed
}

// GetUploadSpeedOk returns a tuple with the UploadSpeed field value
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetUploadSpeedOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UploadSpeed, true
}

// SetUploadSpeed sets field value
func (o *ServiceEntity) SetUploadSpeed(v float32) {
	o.UploadSpeed = v
}

// GetProxy returns the Proxy field value if set, zero value otherwise.
func (o *ServiceEntity) GetProxy() []ProxySettingsEntity {
	if o == nil || o.Proxy == nil {
		var ret []ProxySettingsEntity
		return ret
	}
	return *o.Proxy
}

// GetProxyOk returns a tuple with the Proxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetProxyOk() (*[]ProxySettingsEntity, bool) {
	if o == nil || o.Proxy == nil {
		return nil, false
	}
	return o.Proxy, true
}

// HasProxy returns a boolean if a field has been set.
func (o *ServiceEntity) HasProxy() bool {
	if o != nil && o.Proxy != nil {
		return true
	}

	return false
}

// SetProxy gets a reference to the given []ProxySettingsEntity and assigns it to the Proxy field.
func (o *ServiceEntity) SetProxy(v []ProxySettingsEntity) {
	o.Proxy = &v
}

// GetVpn returns the Vpn field value if set, zero value otherwise.
func (o *ServiceEntity) GetVpn() []VpnSettingsEntity {
	if o == nil || o.Vpn == nil {
		var ret []VpnSettingsEntity
		return ret
	}
	return *o.Vpn
}

// GetVpnOk returns a tuple with the Vpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetVpnOk() (*[]VpnSettingsEntity, bool) {
	if o == nil || o.Vpn == nil {
		return nil, false
	}
	return o.Vpn, true
}

// HasVpn returns a boolean if a field has been set.
func (o *ServiceEntity) HasVpn() bool {
	if o != nil && o.Vpn != nil {
		return true
	}

	return false
}

// SetVpn gets a reference to the given []VpnSettingsEntity and assigns it to the Vpn field.
func (o *ServiceEntity) SetVpn(v []VpnSettingsEntity) {
	o.Vpn = &v
}

// GetValidity returns the Validity field value if set, zero value otherwise.
func (o *ServiceEntity) GetValidity() TimeRangeEntity {
	if o == nil || o.Validity == nil {
		var ret TimeRangeEntity
		return ret
	}
	return *o.Validity
}

// GetValidityOk returns a tuple with the Validity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetValidityOk() (*TimeRangeEntity, bool) {
	if o == nil || o.Validity == nil {
		return nil, false
	}
	return o.Validity, true
}

// HasValidity returns a boolean if a field has been set.
func (o *ServiceEntity) HasValidity() bool {
	if o != nil && o.Validity != nil {
		return true
	}

	return false
}

// SetValidity gets a reference to the given TimeRangeEntity and assigns it to the Validity field.
func (o *ServiceEntity) SetValidity(v TimeRangeEntity) {
	o.Validity = &v
}

// GetDisable returns the Disable field value
func (o *ServiceEntity) GetDisable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disable
}

// GetDisableOk returns a tuple with the Disable field value
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetDisableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Disable, true
}

// SetDisable sets field value
func (o *ServiceEntity) SetDisable(v bool) {
	o.Disable = v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *ServiceEntity) GetCertificates() []CertificatesEntity {
	if o == nil || o.Certificates == nil {
		var ret []CertificatesEntity
		return ret
	}
	return *o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceEntity) GetCertificatesOk() (*[]CertificatesEntity, bool) {
	if o == nil || o.Certificates == nil {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *ServiceEntity) HasCertificates() bool {
	if o != nil && o.Certificates != nil {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given []CertificatesEntity and assigns it to the Certificates field.
func (o *ServiceEntity) SetCertificates(v []CertificatesEntity) {
	o.Certificates = &v
}

func (o ServiceEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["cost"] = o.Cost
	}
	if o.FirstPrePaidMinutes != nil {
		toSerialize["firstPrePaidMinutes"] = o.FirstPrePaidMinutes
	}
	if o.FirstVerificationsNeeded != nil {
		toSerialize["firstVerificationsNeeded"] = o.FirstVerificationsNeeded
	}
	if o.SubsequentPrePaidMinutes != nil {
		toSerialize["subsequentPrePaidMinutes"] = o.SubsequentPrePaidMinutes
	}
	if o.SubsequentVerificationsNeeded != nil {
		toSerialize["subsequentVerificationsNeeded"] = o.SubsequentVerificationsNeeded
	}
	if o.AllowRefunds != nil {
		toSerialize["allowRefunds"] = o.AllowRefunds
	}
	if true {
		toSerialize["downloadSpeed"] = o.DownloadSpeed
	}
	if true {
		toSerialize["uploadSpeed"] = o.UploadSpeed
	}
	if o.Proxy != nil {
		toSerialize["proxy"] = o.Proxy
	}
	if o.Vpn != nil {
		toSerialize["vpn"] = o.Vpn
	}
	if o.Validity != nil {
		toSerialize["validity"] = o.Validity
	}
	if true {
		toSerialize["disable"] = o.Disable
	}
	if o.Certificates != nil {
		toSerialize["certificates"] = o.Certificates
	}
	return json.Marshal(toSerialize)
}

type NullableServiceEntity struct {
	value *ServiceEntity
	isSet bool
}

func (v NullableServiceEntity) Get() *ServiceEntity {
	return v.value
}

func (v *NullableServiceEntity) Set(val *ServiceEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceEntity(val *ServiceEntity) *NullableServiceEntity {
	return &NullableServiceEntity{value: val, isSet: true}
}

func (v NullableServiceEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


