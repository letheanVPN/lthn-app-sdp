/*
 * Lethean VPN Api
 *
 * Distributed Virtual Private Marketplace
 *
 * API version: 1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProxySettingsEntity struct for ProxySettingsEntity
type ProxySettingsEntity struct {
	// IP Address of endpoints for Proxy service only
	Endpoint string `json:"endpoint"`
	// Port available on endpoint
	Port string `json:"port"`
	// Terms for the service
	Terms string `json:"terms"`
	// a JSON containing access policy - whitelist/blacklist default, allowed/blocked IPs and FQDNs in regex format. This is NOT sent to SDP. It is used by the Dispatcher to orchestrate restrictions on Server
	Policy []string `json:"policy"`
}

// NewProxySettingsEntity instantiates a new ProxySettingsEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProxySettingsEntity(endpoint string, port string, terms string, policy []string) *ProxySettingsEntity {
	this := ProxySettingsEntity{}
	this.Endpoint = endpoint
	this.Port = port
	this.Terms = terms
	this.Policy = policy
	return &this
}

// NewProxySettingsEntityWithDefaults instantiates a new ProxySettingsEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProxySettingsEntityWithDefaults() *ProxySettingsEntity {
	this := ProxySettingsEntity{}
	return &this
}

// GetEndpoint returns the Endpoint field value
func (o *ProxySettingsEntity) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *ProxySettingsEntity) GetEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *ProxySettingsEntity) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetPort returns the Port field value
func (o *ProxySettingsEntity) GetPort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *ProxySettingsEntity) GetPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *ProxySettingsEntity) SetPort(v string) {
	o.Port = v
}

// GetTerms returns the Terms field value
func (o *ProxySettingsEntity) GetTerms() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Terms
}

// GetTermsOk returns a tuple with the Terms field value
// and a boolean to check if the value has been set.
func (o *ProxySettingsEntity) GetTermsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Terms, true
}

// SetTerms sets field value
func (o *ProxySettingsEntity) SetTerms(v string) {
	o.Terms = v
}

// GetPolicy returns the Policy field value
func (o *ProxySettingsEntity) GetPolicy() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *ProxySettingsEntity) GetPolicyOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *ProxySettingsEntity) SetPolicy(v []string) {
	o.Policy = v
}

func (o ProxySettingsEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["endpoint"] = o.Endpoint
	}
	if true {
		toSerialize["port"] = o.Port
	}
	if true {
		toSerialize["terms"] = o.Terms
	}
	if true {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableProxySettingsEntity struct {
	value *ProxySettingsEntity
	isSet bool
}

func (v NullableProxySettingsEntity) Get() *ProxySettingsEntity {
	return v.value
}

func (v *NullableProxySettingsEntity) Set(val *ProxySettingsEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableProxySettingsEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableProxySettingsEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProxySettingsEntity(val *ProxySettingsEntity) *NullableProxySettingsEntity {
	return &NullableProxySettingsEntity{value: val, isSet: true}
}

func (v NullableProxySettingsEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProxySettingsEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


