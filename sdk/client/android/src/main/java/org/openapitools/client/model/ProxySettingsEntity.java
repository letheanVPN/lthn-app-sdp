/**
 * LetheanVPN
 * Distributed Virtual Private Marketplace
 *
 * The version of the OpenAPI document: 1
 * Contact: contact@lethean.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ProxySettingsEntity {
  
  @SerializedName("endpoint")
  private String endpoint = null;
  @SerializedName("port")
  private String port = null;
  @SerializedName("terms")
  private String terms = null;
  @SerializedName("policy")
  private List<String> policy = null;

  /**
   * IP Address of endpoints for Proxy service only
   **/
  @ApiModelProperty(required = true, value = "IP Address of endpoints for Proxy service only")
  public String getEndpoint() {
    return endpoint;
  }
  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  /**
   * Port available on endpoint
   **/
  @ApiModelProperty(required = true, value = "Port available on endpoint")
  public String getPort() {
    return port;
  }
  public void setPort(String port) {
    this.port = port;
  }

  /**
   * Terms for the service
   **/
  @ApiModelProperty(required = true, value = "Terms for the service")
  public String getTerms() {
    return terms;
  }
  public void setTerms(String terms) {
    this.terms = terms;
  }

  /**
   * a JSON containing access policy - whitelist/blacklist default, allowed/blocked IPs and FQDNs in regex format. This is NOT sent to SDP. It is used by the Dispatcher to orchestrate restrictions on Server
   **/
  @ApiModelProperty(required = true, value = "a JSON containing access policy - whitelist/blacklist default, allowed/blocked IPs and FQDNs in regex format. This is NOT sent to SDP. It is used by the Dispatcher to orchestrate restrictions on Server")
  public List<String> getPolicy() {
    return policy;
  }
  public void setPolicy(List<String> policy) {
    this.policy = policy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProxySettingsEntity proxySettingsEntity = (ProxySettingsEntity) o;
    return (this.endpoint == null ? proxySettingsEntity.endpoint == null : this.endpoint.equals(proxySettingsEntity.endpoint)) &&
        (this.port == null ? proxySettingsEntity.port == null : this.port.equals(proxySettingsEntity.port)) &&
        (this.terms == null ? proxySettingsEntity.terms == null : this.terms.equals(proxySettingsEntity.terms)) &&
        (this.policy == null ? proxySettingsEntity.policy == null : this.policy.equals(proxySettingsEntity.policy));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.endpoint == null ? 0: this.endpoint.hashCode());
    result = 31 * result + (this.port == null ? 0: this.port.hashCode());
    result = 31 * result + (this.terms == null ? 0: this.terms.hashCode());
    result = 31 * result + (this.policy == null ? 0: this.policy.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProxySettingsEntity {\n");
    
    sb.append("  endpoint: ").append(endpoint).append("\n");
    sb.append("  port: ").append(port).append("\n");
    sb.append("  terms: ").append(terms).append("\n");
    sb.append("  policy: ").append(policy).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
