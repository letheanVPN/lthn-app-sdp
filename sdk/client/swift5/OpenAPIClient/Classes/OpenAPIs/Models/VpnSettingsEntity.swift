//
// VpnSettingsEntity.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct VpnSettingsEntity: Codable, Hashable {

    /** IP Addresses of endpoints for VPN service only */
    public var endpoint: String
    /** Port these settings apply to */
    public var port: String
    /** mtu size parameter for vpn service only */
    public var parameters: String
    /** Terms for the service */
    public var terms: String
    /** a JSON containing access policy - whitelist/blacklist default, allowed/blocked IPs and FQDNs in regex format. This is NOT sent to SDP. It is used by the Dispatcher to orchestrate restrictions on Server */
    public var policy: [String]

    public init(endpoint: String, port: String, parameters: String, terms: String, policy: [String]) {
        self.endpoint = endpoint
        self.port = port
        self.parameters = parameters
        self.terms = terms
        self.policy = policy
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case endpoint
        case port
        case parameters
        case terms
        case policy
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(endpoint, forKey: .endpoint)
        try container.encode(port, forKey: .port)
        try container.encode(parameters, forKey: .parameters)
        try container.encode(terms, forKey: .terms)
        try container.encode(policy, forKey: .policy)
    }
}

