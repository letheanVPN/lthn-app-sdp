/**
 * Lethean VPM
 * Distributed Virtual Private Marketplace
 *
 * The version of the OpenAPI document: 1
 * Contact: contact@lethean.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "LTHNTimeRangeEntity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "LTHNHelpers.h"

namespace lthn {
namespace vpm {
namespace client {

LTHNTimeRangeEntity::LTHNTimeRangeEntity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

LTHNTimeRangeEntity::LTHNTimeRangeEntity() {
    this->initializeModel();
}

LTHNTimeRangeEntity::~LTHNTimeRangeEntity() {}

void LTHNTimeRangeEntity::initializeModel() {

    m_from_isSet = false;
    m_from_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void LTHNTimeRangeEntity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void LTHNTimeRangeEntity::fromJsonObject(QJsonObject json) {

    m_from_isValid = ::lthn::vpm::client::fromJsonValue(from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_to_isValid = ::lthn::vpm::client::fromJsonValue(to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString LTHNTimeRangeEntity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject LTHNTimeRangeEntity::asJsonObject() const {
    QJsonObject obj;
    if (m_from_isSet) {
        obj.insert(QString("from"), ::lthn::vpm::client::toJsonValue(from));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::lthn::vpm::client::toJsonValue(to));
    }
    return obj;
}

QDateTime LTHNTimeRangeEntity::getFrom() const {
    return from;
}
void LTHNTimeRangeEntity::setFrom(const QDateTime &from) {
    this->from = from;
    this->m_from_isSet = true;
}

bool LTHNTimeRangeEntity::is_from_Set() const{
    return m_from_isSet;
}

bool LTHNTimeRangeEntity::is_from_Valid() const{
    return m_from_isValid;
}

QDateTime LTHNTimeRangeEntity::getTo() const {
    return to;
}
void LTHNTimeRangeEntity::setTo(const QDateTime &to) {
    this->to = to;
    this->m_to_isSet = true;
}

bool LTHNTimeRangeEntity::is_to_Set() const{
    return m_to_isSet;
}

bool LTHNTimeRangeEntity::is_to_Valid() const{
    return m_to_isValid;
}

bool LTHNTimeRangeEntity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool LTHNTimeRangeEntity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_from_isValid && m_to_isValid && true;
}

} // namespace lthn
} // namespace vpm
} // namespace client
