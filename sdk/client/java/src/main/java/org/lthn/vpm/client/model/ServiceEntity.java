/*
 * Lethean VPM
 * Distributed Virtual Private Marketplace
 *
 * The version of the OpenAPI document: 1
 * Contact: contact@lethean.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.lthn.vpm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.lthn.vpm.client.model.CertificatesEntity;
import org.lthn.vpm.client.model.ProxySettingsEntity;
import org.lthn.vpm.client.model.TimeRangeEntity;
import org.lthn.vpm.client.model.VpnSettingsEntity;

/**
 * ServiceEntity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-23T21:16:28.941109+01:00[Europe/London]")
public class ServiceEntity {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Type of the service
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    VPN("vpn"),
    
    PROXY("proxy");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private String cost;

  public static final String SERIALIZED_NAME_FIRST_PRE_PAID_MINUTES = "firstPrePaidMinutes";
  @SerializedName(SERIALIZED_NAME_FIRST_PRE_PAID_MINUTES)
  private BigDecimal firstPrePaidMinutes;

  public static final String SERIALIZED_NAME_FIRST_VERIFICATIONS_NEEDED = "firstVerificationsNeeded";
  @SerializedName(SERIALIZED_NAME_FIRST_VERIFICATIONS_NEEDED)
  private BigDecimal firstVerificationsNeeded;

  public static final String SERIALIZED_NAME_SUBSEQUENT_PRE_PAID_MINUTES = "subsequentPrePaidMinutes";
  @SerializedName(SERIALIZED_NAME_SUBSEQUENT_PRE_PAID_MINUTES)
  private BigDecimal subsequentPrePaidMinutes;

  public static final String SERIALIZED_NAME_SUBSEQUENT_VERIFICATIONS_NEEDED = "subsequentVerificationsNeeded";
  @SerializedName(SERIALIZED_NAME_SUBSEQUENT_VERIFICATIONS_NEEDED)
  private BigDecimal subsequentVerificationsNeeded;

  public static final String SERIALIZED_NAME_ALLOW_REFUNDS = "allowRefunds";
  @SerializedName(SERIALIZED_NAME_ALLOW_REFUNDS)
  private Boolean allowRefunds;

  public static final String SERIALIZED_NAME_DOWNLOAD_SPEED = "downloadSpeed";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_SPEED)
  private BigDecimal downloadSpeed;

  public static final String SERIALIZED_NAME_UPLOAD_SPEED = "uploadSpeed";
  @SerializedName(SERIALIZED_NAME_UPLOAD_SPEED)
  private BigDecimal uploadSpeed;

  public static final String SERIALIZED_NAME_PROXY = "proxy";
  @SerializedName(SERIALIZED_NAME_PROXY)
  private List<ProxySettingsEntity> proxy = null;

  public static final String SERIALIZED_NAME_VPN = "vpn";
  @SerializedName(SERIALIZED_NAME_VPN)
  private List<VpnSettingsEntity> vpn = null;

  public static final String SERIALIZED_NAME_VALIDITY = "validity";
  @SerializedName(SERIALIZED_NAME_VALIDITY)
  private TimeRangeEntity validity;

  public static final String SERIALIZED_NAME_DISABLE = "disable";
  @SerializedName(SERIALIZED_NAME_DISABLE)
  private Boolean disable;

  public static final String SERIALIZED_NAME_CERTIFICATES = "certificates";
  @SerializedName(SERIALIZED_NAME_CERTIFICATES)
  private List<CertificatesEntity> certificates = null;


  public ServiceEntity id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID of the service
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the service")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ServiceEntity name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the service
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the service")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ServiceEntity type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of the service
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type of the service")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ServiceEntity cost(String cost) {
    
    this.cost = cost;
    return this;
  }

   /**
   * Per minute Cost of the service
   * @return cost
  **/
  @ApiModelProperty(required = true, value = "Per minute Cost of the service")

  public String getCost() {
    return cost;
  }


  public void setCost(String cost) {
    this.cost = cost;
  }


  public ServiceEntity firstPrePaidMinutes(BigDecimal firstPrePaidMinutes) {
    
    this.firstPrePaidMinutes = firstPrePaidMinutes;
    return this;
  }

   /**
   * Amount of pre-paid minutes for first payment
   * minimum: 10
   * maximum: 1440
   * @return firstPrePaidMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount of pre-paid minutes for first payment")

  public BigDecimal getFirstPrePaidMinutes() {
    return firstPrePaidMinutes;
  }


  public void setFirstPrePaidMinutes(BigDecimal firstPrePaidMinutes) {
    this.firstPrePaidMinutes = firstPrePaidMinutes;
  }


  public ServiceEntity firstVerificationsNeeded(BigDecimal firstVerificationsNeeded) {
    
    this.firstVerificationsNeeded = firstVerificationsNeeded;
    return this;
  }

   /**
   * Number of verifications needed for first payment
   * minimum: 0
   * maximum: 2
   * @return firstVerificationsNeeded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of verifications needed for first payment")

  public BigDecimal getFirstVerificationsNeeded() {
    return firstVerificationsNeeded;
  }


  public void setFirstVerificationsNeeded(BigDecimal firstVerificationsNeeded) {
    this.firstVerificationsNeeded = firstVerificationsNeeded;
  }


  public ServiceEntity subsequentPrePaidMinutes(BigDecimal subsequentPrePaidMinutes) {
    
    this.subsequentPrePaidMinutes = subsequentPrePaidMinutes;
    return this;
  }

   /**
   * Amount of pre-paid minutes for subsequent payments
   * minimum: 10
   * maximum: 1440
   * @return subsequentPrePaidMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount of pre-paid minutes for subsequent payments")

  public BigDecimal getSubsequentPrePaidMinutes() {
    return subsequentPrePaidMinutes;
  }


  public void setSubsequentPrePaidMinutes(BigDecimal subsequentPrePaidMinutes) {
    this.subsequentPrePaidMinutes = subsequentPrePaidMinutes;
  }


  public ServiceEntity subsequentVerificationsNeeded(BigDecimal subsequentVerificationsNeeded) {
    
    this.subsequentVerificationsNeeded = subsequentVerificationsNeeded;
    return this;
  }

   /**
   * Number of verifications needed for subsequent payments
   * minimum: 0
   * maximum: 1
   * @return subsequentVerificationsNeeded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of verifications needed for subsequent payments")

  public BigDecimal getSubsequentVerificationsNeeded() {
    return subsequentVerificationsNeeded;
  }


  public void setSubsequentVerificationsNeeded(BigDecimal subsequentVerificationsNeeded) {
    this.subsequentVerificationsNeeded = subsequentVerificationsNeeded;
  }


  public ServiceEntity allowRefunds(Boolean allowRefunds) {
    
    this.allowRefunds = allowRefunds;
    return this;
  }

   /**
   * Whether or not refunds are allowed
   * @return allowRefunds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not refunds are allowed")

  public Boolean getAllowRefunds() {
    return allowRefunds;
  }


  public void setAllowRefunds(Boolean allowRefunds) {
    this.allowRefunds = allowRefunds;
  }


  public ServiceEntity downloadSpeed(BigDecimal downloadSpeed) {
    
    this.downloadSpeed = downloadSpeed;
    return this;
  }

   /**
   * Service download speed in Mbits
   * minimum: 0
   * maximum: 99999999999
   * @return downloadSpeed
  **/
  @ApiModelProperty(required = true, value = "Service download speed in Mbits")

  public BigDecimal getDownloadSpeed() {
    return downloadSpeed;
  }


  public void setDownloadSpeed(BigDecimal downloadSpeed) {
    this.downloadSpeed = downloadSpeed;
  }


  public ServiceEntity uploadSpeed(BigDecimal uploadSpeed) {
    
    this.uploadSpeed = uploadSpeed;
    return this;
  }

   /**
   * Service upload speed in Mbits
   * minimum: 0
   * maximum: 99999999999
   * @return uploadSpeed
  **/
  @ApiModelProperty(required = true, value = "Service upload speed in Mbits")

  public BigDecimal getUploadSpeed() {
    return uploadSpeed;
  }


  public void setUploadSpeed(BigDecimal uploadSpeed) {
    this.uploadSpeed = uploadSpeed;
  }


  public ServiceEntity proxy(List<ProxySettingsEntity> proxy) {
    
    this.proxy = proxy;
    return this;
  }

  public ServiceEntity addProxyItem(ProxySettingsEntity proxyItem) {
    if (this.proxy == null) {
      this.proxy = new ArrayList<ProxySettingsEntity>();
    }
    this.proxy.add(proxyItem);
    return this;
  }

   /**
   * array containing Proxy related settings. only available if service is of type proxy, null otherwise
   * @return proxy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "array containing Proxy related settings. only available if service is of type proxy, null otherwise")

  public List<ProxySettingsEntity> getProxy() {
    return proxy;
  }


  public void setProxy(List<ProxySettingsEntity> proxy) {
    this.proxy = proxy;
  }


  public ServiceEntity vpn(List<VpnSettingsEntity> vpn) {
    
    this.vpn = vpn;
    return this;
  }

  public ServiceEntity addVpnItem(VpnSettingsEntity vpnItem) {
    if (this.vpn == null) {
      this.vpn = new ArrayList<VpnSettingsEntity>();
    }
    this.vpn.add(vpnItem);
    return this;
  }

   /**
   * array containing VPN related settings. only available if service is of type vpn, null otherwise
   * @return vpn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "array containing VPN related settings. only available if service is of type vpn, null otherwise")

  public List<VpnSettingsEntity> getVpn() {
    return vpn;
  }


  public void setVpn(List<VpnSettingsEntity> vpn) {
    this.vpn = vpn;
  }


  public ServiceEntity validity(TimeRangeEntity validity) {
    
    this.validity = validity;
    return this;
  }

   /**
   * Get validity
   * @return validity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TimeRangeEntity getValidity() {
    return validity;
  }


  public void setValidity(TimeRangeEntity validity) {
    this.validity = validity;
  }


  public ServiceEntity disable(Boolean disable) {
    
    this.disable = disable;
    return this;
  }

   /**
   * disable or not the service
   * @return disable
  **/
  @ApiModelProperty(required = true, value = "disable or not the service")

  public Boolean getDisable() {
    return disable;
  }


  public void setDisable(Boolean disable) {
    this.disable = disable;
  }


  public ServiceEntity certificates(List<CertificatesEntity> certificates) {
    
    this.certificates = certificates;
    return this;
  }

  public ServiceEntity addCertificatesItem(CertificatesEntity certificatesItem) {
    if (this.certificates == null) {
      this.certificates = new ArrayList<CertificatesEntity>();
    }
    this.certificates.add(certificatesItem);
    return this;
  }

   /**
   * inside each service, there should be a field named certificates that has a list of IDs, referencing the certificates at the provider level.
   * @return certificates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "inside each service, there should be a field named certificates that has a list of IDs, referencing the certificates at the provider level.")

  public List<CertificatesEntity> getCertificates() {
    return certificates;
  }


  public void setCertificates(List<CertificatesEntity> certificates) {
    this.certificates = certificates;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceEntity serviceEntity = (ServiceEntity) o;
    return Objects.equals(this.id, serviceEntity.id) &&
        Objects.equals(this.name, serviceEntity.name) &&
        Objects.equals(this.type, serviceEntity.type) &&
        Objects.equals(this.cost, serviceEntity.cost) &&
        Objects.equals(this.firstPrePaidMinutes, serviceEntity.firstPrePaidMinutes) &&
        Objects.equals(this.firstVerificationsNeeded, serviceEntity.firstVerificationsNeeded) &&
        Objects.equals(this.subsequentPrePaidMinutes, serviceEntity.subsequentPrePaidMinutes) &&
        Objects.equals(this.subsequentVerificationsNeeded, serviceEntity.subsequentVerificationsNeeded) &&
        Objects.equals(this.allowRefunds, serviceEntity.allowRefunds) &&
        Objects.equals(this.downloadSpeed, serviceEntity.downloadSpeed) &&
        Objects.equals(this.uploadSpeed, serviceEntity.uploadSpeed) &&
        Objects.equals(this.proxy, serviceEntity.proxy) &&
        Objects.equals(this.vpn, serviceEntity.vpn) &&
        Objects.equals(this.validity, serviceEntity.validity) &&
        Objects.equals(this.disable, serviceEntity.disable) &&
        Objects.equals(this.certificates, serviceEntity.certificates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, cost, firstPrePaidMinutes, firstVerificationsNeeded, subsequentPrePaidMinutes, subsequentVerificationsNeeded, allowRefunds, downloadSpeed, uploadSpeed, proxy, vpn, validity, disable, certificates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceEntity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    firstPrePaidMinutes: ").append(toIndentedString(firstPrePaidMinutes)).append("\n");
    sb.append("    firstVerificationsNeeded: ").append(toIndentedString(firstVerificationsNeeded)).append("\n");
    sb.append("    subsequentPrePaidMinutes: ").append(toIndentedString(subsequentPrePaidMinutes)).append("\n");
    sb.append("    subsequentVerificationsNeeded: ").append(toIndentedString(subsequentVerificationsNeeded)).append("\n");
    sb.append("    allowRefunds: ").append(toIndentedString(allowRefunds)).append("\n");
    sb.append("    downloadSpeed: ").append(toIndentedString(downloadSpeed)).append("\n");
    sb.append("    uploadSpeed: ").append(toIndentedString(uploadSpeed)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    vpn: ").append(toIndentedString(vpn)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    disable: ").append(toIndentedString(disable)).append("\n");
    sb.append("    certificates: ").append(toIndentedString(certificates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

