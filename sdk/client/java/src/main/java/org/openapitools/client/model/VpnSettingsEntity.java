/*
 * Lethean VPN Api
 * Distributed Virtual Private Marketplace
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * VpnSettingsEntity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-23T19:11:23.080808+01:00[Europe/London]")
public class VpnSettingsEntity {
  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private String port;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private String parameters;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private String terms;

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private List<String> policy = new ArrayList<String>();


  public VpnSettingsEntity endpoint(String endpoint) {
    
    this.endpoint = endpoint;
    return this;
  }

   /**
   * IP Addresses of endpoints for VPN service only
   * @return endpoint
  **/
  @ApiModelProperty(required = true, value = "IP Addresses of endpoints for VPN service only")

  public String getEndpoint() {
    return endpoint;
  }


  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public VpnSettingsEntity port(String port) {
    
    this.port = port;
    return this;
  }

   /**
   * Port these settings apply to
   * @return port
  **/
  @ApiModelProperty(required = true, value = "Port these settings apply to")

  public String getPort() {
    return port;
  }


  public void setPort(String port) {
    this.port = port;
  }


  public VpnSettingsEntity parameters(String parameters) {
    
    this.parameters = parameters;
    return this;
  }

   /**
   * mtu size parameter for vpn service only
   * @return parameters
  **/
  @ApiModelProperty(required = true, value = "mtu size parameter for vpn service only")

  public String getParameters() {
    return parameters;
  }


  public void setParameters(String parameters) {
    this.parameters = parameters;
  }


  public VpnSettingsEntity terms(String terms) {
    
    this.terms = terms;
    return this;
  }

   /**
   * Terms for the service
   * @return terms
  **/
  @ApiModelProperty(required = true, value = "Terms for the service")

  public String getTerms() {
    return terms;
  }


  public void setTerms(String terms) {
    this.terms = terms;
  }


  public VpnSettingsEntity policy(List<String> policy) {
    
    this.policy = policy;
    return this;
  }

  public VpnSettingsEntity addPolicyItem(String policyItem) {
    this.policy.add(policyItem);
    return this;
  }

   /**
   * a JSON containing access policy - whitelist/blacklist default, allowed/blocked IPs and FQDNs in regex format. This is NOT sent to SDP. It is used by the Dispatcher to orchestrate restrictions on Server
   * @return policy
  **/
  @ApiModelProperty(required = true, value = "a JSON containing access policy - whitelist/blacklist default, allowed/blocked IPs and FQDNs in regex format. This is NOT sent to SDP. It is used by the Dispatcher to orchestrate restrictions on Server")

  public List<String> getPolicy() {
    return policy;
  }


  public void setPolicy(List<String> policy) {
    this.policy = policy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VpnSettingsEntity vpnSettingsEntity = (VpnSettingsEntity) o;
    return Objects.equals(this.endpoint, vpnSettingsEntity.endpoint) &&
        Objects.equals(this.port, vpnSettingsEntity.port) &&
        Objects.equals(this.parameters, vpnSettingsEntity.parameters) &&
        Objects.equals(this.terms, vpnSettingsEntity.terms) &&
        Objects.equals(this.policy, vpnSettingsEntity.policy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpoint, port, parameters, terms, policy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VpnSettingsEntity {\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

