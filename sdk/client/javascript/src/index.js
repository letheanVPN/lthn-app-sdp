/**
 * Lethean VPM
 * Distributed Virtual Private Marketplace
 *
 * The version of the OpenAPI document: 1
 * Contact: contact@lethean.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CertificatesEntity from './model/CertificatesEntity';
import ProxySettingsEntity from './model/ProxySettingsEntity';
import ServiceEntity from './model/ServiceEntity';
import TimeRangeEntity from './model/TimeRangeEntity';
import VpnSettingsEntity from './model/VpnSettingsEntity';
import DefaultApi from './api/DefaultApi';
import ProviderApi from './api/ProviderApi';
import ServicesApi from './api/ServicesApi';


/**
* Distributed_Virtual_Private_Marketplace.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var LetheanVpm = require('index'); // See note below*.
* var xxxSvc = new LetheanVpm.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new LetheanVpm.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new LetheanVpm.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new LetheanVpm.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CertificatesEntity model constructor.
     * @property {module:model/CertificatesEntity}
     */
    CertificatesEntity,

    /**
     * The ProxySettingsEntity model constructor.
     * @property {module:model/ProxySettingsEntity}
     */
    ProxySettingsEntity,

    /**
     * The ServiceEntity model constructor.
     * @property {module:model/ServiceEntity}
     */
    ServiceEntity,

    /**
     * The TimeRangeEntity model constructor.
     * @property {module:model/TimeRangeEntity}
     */
    TimeRangeEntity,

    /**
     * The VpnSettingsEntity model constructor.
     * @property {module:model/VpnSettingsEntity}
     */
    VpnSettingsEntity,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi,

    /**
    * The ProviderApi service constructor.
    * @property {module:api/ProviderApi}
    */
    ProviderApi,

    /**
    * The ServicesApi service constructor.
    * @property {module:api/ServicesApi}
    */
    ServicesApi
};
