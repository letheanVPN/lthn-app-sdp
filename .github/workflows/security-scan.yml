name: Security Check

on:
  push:
    branches:
      - 'main'
      - 'v*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'main'
      - 'v*'
    paths-ignore:
      - '**.md'

jobs:
  trojan:
    name: NPM Trojan Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.1.1
        with:
          node-version: 16.x
      - run: npm install
      - run: npm install anti-trojan-source
      - name: Unicode bidi attack check
        run: npx anti-trojan-source --files='/runner/work/sdp/sdp/**/*.js'
  js-audit:
    name: AuditJS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.1.1
        with:
          node-version: 16.x
      - run: npm install
      - name: run auditjs
        run: npx --loglevel=error auditjs@beta ossi --json > auditjs.json || exit 0

  sensitive-fs:
    name: Sensitive File Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.1.1
        with:
          node-version: 16.x
      - run: npm install
      - run: npx ban-sensitive-files

  semgrep:
    name: SemGrep Scan
    runs-on: ubuntu-latest
    # Skip any PR created by dependabot to avoid permission issues
    if: (github.actor != 'dependabot[bot]')
    steps:
      # Fetch project source
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.1.1
        with:
          node-version: 16.x
      - run: npm install
      - uses: returntocorp/semgrep-action@v1
        with:
          config: >- # more at semgrep.dev/explore
            p/security-audit
            p/secrets
        # == Optional settings in the `with:` block

        # Instead of `config:`, use rules set in Semgrep App.
        # Get your token from semgrep.dev/manage/settings.
        #   publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}

        # Never fail the build due to findings on pushes.
        # Instead, just collect findings for semgrep.dev/manage/findings
        #   auditOn: push

        # Upload findings to GitHub Advanced Security Dashboard [step 1/2]
        # See also the next step.
        #   generateSarif: "1"

        # Change job timeout (default is 1800 seconds; set to 0 to disable)
        # env:
        #   SEMGREP_TIMEOUT: 300

      # Upload findings to GitHub Advanced Security Dashboard [step 2/2]
      # - name: Upload SARIF file for GitHub Advanced Security Dashboard
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: semgrep.sarif
      #   if: always()
