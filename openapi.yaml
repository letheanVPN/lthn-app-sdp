openapi: 3.0.0
paths:
  /v1/signature/get:
    get:
      operationId: sigVerify
      parameters: []
      responses:
        "200":
          description: ""
  /v1/cache/index:
    get:
      operationId: cacheStats
      parameters: []
      responses:
        "200":
          description: ""
  /v1/provider/search:
    get:
      operationId: findAll
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProviderEntity"
      tags:
        - vpn
  /v1/service/search:
    get:
      operationId: listServices
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceEntity"
        "302":
          description: Services list
      tags:
        - vpn
  "/v1/service/search/{client}":
    get:
      operationId: findOne
      parameters:
        - name: client
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - vpn
  /v1/service/add:
    post:
      operationId: createService
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceEntity"
      responses:
        "201":
          description: The record has been successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceEntity"
        "403":
          description: Forbidden.
      tags:
        - vpn
  /v1/feedback/add:
    post:
      operationId: addFeedback
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackEntity"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - vpn
  "/v1/feedback/get/{client}/{id}":
    get:
      operationId: getProviderFeedback
      parameters:
        - name: client
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackEntity"
      tags:
        - vpn
  /v1/feedback/stats:
    get:
      operationId: getProvidersFeedback
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedbackEntity"
      tags:
        - vpn
  /v1/explorer/chain/mempool:
    get:
      operationId: getMempool
      summary: ""
      description: Fetch transactions in memory pool
      parameters:
        - name: page
          required: false
          in: path
          example: 0
          description: Page to show
          schema: {}
        - name: limit
          required: false
          in: path
          example: 25
          description: Transactions per page
          schema: {}
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MempoolDTO"
      tags:
        - explorer
  "/v1/explorer/chain/search/{id}":
    get:
      operationId: searchChain
      summary: ""
      description: Search the blockhain for records
      parameters:
        - name: id
          required: true
          in: path
          example: f85dc71b11989c8bd479b41bb2a29da4856a8fd531a3d1789b4eab2390cf5b0e
          description: Search id, can be block_number | tx_hash | block_hash
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDTO"
      tags:
        - explorer
  "/v1/explorer/chain/block/{id}":
    get:
      operationId: getBlock
      parameters:
        - name: id
          required: true
          in: path
          example: "1008663"
          description: Search id, must be block_number
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockDTO"
      tags:
        - explorer
  /v1/explorer/chain/block/outputs:
    get:
      operationId: getOutputsBlocks
      summary: ""
      description: Search for our outputs in last few blocks (up to 5 blocks), using
        provided address and viewkey.
      parameters:
        - name: mempool
          required: false
          in: path
          example: 1
          description: Check mempool
          schema: {}
        - name: limit
          required: false
          in: path
          description: Blocks to check
          schema: {}
        - name: viewkey
          required: true
          in: path
          description: Viewkey for the transaction
          schema: {}
        - name: address
          required: true
          in: path
          description: Address to check
          schema: {}
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockOutputsDTO"
      tags:
        - explorer
  "/v1/explorer/chain/block/raw/{id}":
    get:
      operationId: getRawBlockData
      parameters:
        - name: id
          required: true
          in: path
          example: "1008663"
          description: Search id, must be block_number
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RawBlockDTO"
      tags:
        - explorer
  /v1/explorer/chain/transaction:
    get:
      operationId: getTransaction
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - explorer
  /v1/explorer/chain/transaction/list:
    get:
      operationId: getTransactions
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - explorer
  "/v1/explorer/chain/transaction/raw/{tx_hash}":
    get:
      operationId: getRawTransactionData
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - explorer
  /v1/explorer/chain/stats:
    get:
      operationId: getNetworkInfo
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - explorer
  /v1/explorer/chain/stats/emission:
    get:
      operationId: getEmission
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - explorer
  /v1/explorer/chain/version:
    get:
      operationId: getVersion
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - explorer
  /v1/explorer/validate/outputs:
    get:
      operationId: proveOutputs
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - explorer
  /v1/explorer/validate/transfer:
    get:
      operationId: proveTransfer
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - explorer
info:
  title: Lethean VPN
  description: Distributed Virtual Private Marketplace
  version: "1"
  contact:
    name: Lethean VPN
    url: https://lt.hn
    email: contact@lethean.io
  license:
    name: GPLv3
    url: https://gitlab.com/lthn.io/projects/vpn/market-api/LICENCE
tags: []
servers:
  - url: http://localhost:36911
  - url: https://dvpm.io
components:
  schemas:
    CertificateEntity:
      type: object
      properties:
        id:
          type: number
        cn:
          type: string
          description: Common name of certificates
          pattern: "[a-zA-z .]"
        certificates:
          description: Base 64 encoded strings of certificates for Proxy service only
          type: array
          items:
            type: string
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
      required:
        - id
        - cn
        - certificates
    ProviderEntity:
      type: object
      properties:
        id:
          type: string
          description: ID of the ProviderEntity
          minLength: 64
          maxLength: 64
          pattern: "[A-F0-9+/=]"
        nodeType:
          type: string
          description: Node Type
          enum:
            - residential
            - commercial
            - government
        name:
          type: string
          description: Name of the ProviderEntity
          maxLength: 16
          pattern: ^[a-zA-Z0-9 ,.-_]+$
        certificates:
          description: Base 64 encoded certificate content
          type: array
          items:
            $ref: "#/components/schemas/CertificateEntity"
        wallet:
          type: string
          description: Wallet address
          maxLength: 97
          minLength: 97
          pattern: iz[a-zA-Z0-9]
        terms:
          type: string
          description: Terms of the ProviderEntity as a whole
          maxLength: 50000
          pattern: "[:print:]"
      required:
        - id
        - nodeType
        - name
        - certificates
        - wallet
        - terms
    ProxySettingsEntity:
      type: object
      properties:
        endpoint:
          type: string
          description: IP Address of endpoints for Proxy service only
          pattern: "/((^s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[\
            1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))s*$)|(^s*((([0-9A-Fa-f]{1,\
            4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1\
            ,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){\
            3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-\
            5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([\
            0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4}\
            )?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3\
            }))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A\
            -Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|\
            1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4})\
            {1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(2\
            5[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0\
            -9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1\
            dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa\
            -f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-\
            9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*$))|(^s*((?=\
            .{1,255}$)(?=.*[A-Za-z].*)[0-9A-Za-z](?:(?:[0-9A-Za-z]|\b-){0,61}[0\
            -9A-Za-z])?(?:.[0-9A-Za-z](?:(?:[0-9A-Za-z]|\b-){0,61}[0-9A-Za-z])?\
            )*)s*$)/"
        port:
          type: string
          description: Port available on endpoint
          pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])/([tT][cC][pP]|[uU][dD][pP])$
        terms:
          type: string
          description: Terms for the service
          pattern: "[:print:]"
        policy:
          description: >-
            a JSON containing access policy - whitelist/blacklist default,
            allowed/blocked IPs and FQDNs in regex format.

            This is NOT sent to SDP. It is used by the Dispatcher to orchestrate restrictions on Server
          type: array
          items:
            type: string
      required:
        - endpoint
        - port
        - terms
        - policy
    VpnSettingsEntity:
      type: object
      properties:
        endpoint:
          type: string
          description: IP Addresses of endpoints for VPN service only
          pattern: "/((^s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[\
            1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))s*$)|(^s*((([0-9A-Fa-f]{1,\
            4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1\
            ,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){\
            3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-\
            5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([\
            0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4}\
            )?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3\
            }))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A\
            -Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|\
            1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4})\
            {1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(2\
            5[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0\
            -9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1\
            dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa\
            -f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-\
            9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*$))|(^s*((?=\
            .{1,255}$)(?=.*[A-Za-z].*)[0-9A-Za-z](?:(?:[0-9A-Za-z]|\b-){0,61}[0\
            -9A-Za-z])?(?:.[0-9A-Za-z](?:(?:[0-9A-Za-z]|\b-){0,61}[0-9A-Za-z])?\
            )*)s*$)/"
        port:
          type: string
          description: Port these settings apply to
          pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])/([tT][cC][pP]|[uU][dD][pP])$
        parameters:
          type: string
          description: mtu size parameter for vpn service only
        terms:
          type: string
          description: Terms for the service
          pattern: "[:print:]"
        policy:
          description: a JSON containing access policy - whitelist/blacklist default,
            allowed/blocked IPs and FQDNs in regex format. This is NOT sent to
            SDP. It is used by the Dispatcher to orchestrate restrictions on
            Server
          default: []
          type: array
          items:
            type: string
      required:
        - endpoint
        - port
        - parameters
        - terms
        - policy
    timeRangeEntity:
      type: object
      properties:
        from:
          type: string
          format: date-time
          description: YYYY-MM-DDT00:00:00Z
        to:
          type: string
          format: date-time
          description: YYYY-MM-DDT00:00:00Z
      required:
        - from
        - to
    CertificatesEntity:
      type: object
      properties:
        id:
          type: number
          description: ID only
      required:
        - id
    ServiceEntity:
      type: object
      properties:
        id:
          type: string
          description: ID of the service
          minLength: 2
          maxLength: 2
          pattern: "[0-9A-F]{1}[0-9A-F]{1}"
        name:
          type: string
          description: Name of the service
          maxLength: 32
          pattern: ^[a-zA-Z0-9 ,.-_]+$
        type:
          type: string
          description: Type of the service
          enum:
            - vpn
            - proxy
        cost:
          type: string
          description: Per minute Cost of the service
          maxLength: 14
          pattern: ([0-9]{1,5}|[.]{1}[0-9]{1,8})
        firstPrePaidMinutes:
          type: number
          description: Amount of pre-paid minutes for first payment
          minimum: 10
          maximum: 1440
        firstVerificationsNeeded:
          type: number
          description: Number of verifications needed for first payment
          minimum: 0
          maximum: 2
        subsequentPrePaidMinutes:
          type: number
          description: Amount of pre-paid minutes for subsequent payments
          minimum: 10
          maximum: 1440
        subsequentVerificationsNeeded:
          type: number
          description: Number of verifications needed for subsequent payments
          minimum: 0
          maximum: 1
        allowRefunds:
          type: boolean
          description: Whether or not refunds are allowed
        downloadSpeed:
          type: number
          description: Service download speed in Mbits
          minimum: 0
          maximum: 99999999999
        uploadSpeed:
          type: number
          description: Service upload speed in Mbits
          minimum: 0
          maximum: 99999999999
        proxy:
          description: array containing Proxy related settings. only available if service
            is of type proxy, null otherwise
          type: array
          items:
            $ref: "#/components/schemas/ProxySettingsEntity"
        vpn:
          description: array containing VPN related settings. only available if service is
            of type vpn, null otherwise
          type: array
          items:
            $ref: "#/components/schemas/VpnSettingsEntity"
        validity:
          $ref: "#/components/schemas/timeRangeEntity"
        disable:
          type: boolean
          description: disable or not the service
        certificates:
          description: inside each service, there should be a field named certificates
            that has a list of IDs, referencing the certificates at the provider
            level.
          type: array
          items:
            $ref: "#/components/schemas/CertificatesEntity"
      required:
        - id
        - name
        - type
        - cost
        - downloadSpeed
        - uploadSpeed
        - disable
    FeedbackEntity:
      type: object
      properties:
        id:
          type: string
          pattern: iz[a-zA-Z0-9]
          maxLength: 97
          minLength: 97
        provider:
          type: string
          pattern: "[A-Za-z0-9+/=!@#$&:;.,{}]"
          minLength: 64
          maxLength: 64
        services:
          type: string
          maxLength: 2
          minLength: 2
          pattern: "[0-9A-F]{1}[1-9A-F]{1}"
        speed:
          type: number
          pattern: "[0-5]{1}"
          minimum: 0
          maximum: 5
        stability:
          type: number
          minimum: 0
          maximum: 5
          pattern: "[0-5]{1}"
      required:
        - id
        - provider
        - services
        - speed
        - stability
    TxnEntity:
      type: object
      properties:
        coinbase:
          type: boolean
        extra:
          type: string
        mixin:
          type: number
        payment_id:
          type: string
        payment_id8:
          type: string
        rct_type:
          type: number
        timestamp:
          type: number
        timestamp_utc:
          type: string
        tx_fee:
          type: number
        tx_hash:
          type: string
        tx_size:
          type: number
        tx_version:
          type: number
        xmr_inputs:
          type: number
        xmr_outputs:
          type: number
      required:
        - coinbase
        - extra
        - mixin
        - rct_type
        - timestamp
        - timestamp_utc
        - tx_fee
        - tx_hash
        - tx_size
        - tx_version
        - xmr_inputs
        - xmr_outputs
    MempoolEntity:
      type: object
      properties:
        limit:
          type: number
        page:
          type: number
        total_page_no:
          type: number
        txs:
          type: array
          items:
            $ref: "#/components/schemas/TxnEntity"
        txs_no:
          type: number
      required:
        - limit
        - page
        - total_page_no
        - txs_no
    MempoolDTO:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - fail
        data:
          description: payload data
          allOf:
            - $ref: "#/components/schemas/MempoolEntity"
      required:
        - status
        - data
    MixinEntity:
      type: object
      properties:
        block_no:
          type: number
        public_key:
          type: string
      required:
        - block_no
        - public_key
    InputsEntity:
      type: object
      properties:
        amount:
          type: number
        key_image:
          type: string
        mixins:
          type: array
          items:
            $ref: "#/components/schemas/MixinEntity"
      required:
        - amount
        - key_image
        - mixins
    OutputEntity:
      type: object
      properties:
        amount:
          type: number
        public_key:
          type: string
      required:
        - amount
        - public_key
    SearchEntity:
      type: object
      properties:
        block_height:
          type: number
        coinbase:
          type: boolean
        confirmations:
          type: number
        current_height:
          type: number
        extra:
          type: string
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/InputsEntity"
        mixin:
          type: number
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/OutputEntity"
        payment_id:
          type: string
        payment_id8:
          type: string
        rct_type:
          type: number
        timestamp:
          type: number
        timestamp_utc:
          type: string
        title:
          type: string
        tx_fee:
          type: number
        tx_hash:
          type: string
        tx_size:
          type: number
        tx_version:
          type: number
        xmr_inputs:
          type: number
        xmr_outputs:
          type: number
      required:
        - block_height
        - coinbase
        - confirmations
        - current_height
        - extra
        - inputs
        - mixin
        - outputs
        - rct_type
        - timestamp
        - timestamp_utc
        - title
        - tx_fee
        - tx_hash
        - tx_size
        - tx_version
        - xmr_inputs
        - xmr_outputs
    SearchDTO:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - fail
        data:
          description: payload data
          allOf:
            - $ref: "#/components/schemas/SearchEntity"
      required:
        - status
        - data
    BlockEntity:
      type: object
      properties:
        block_height:
          type: number
        current_height:
          type: number
        hash:
          type: string
        size:
          type: number
        timestamp:
          type: number
        timestamp_utc:
          type: string
        txs:
          type: array
          items:
            $ref: "#/components/schemas/TxnEntity"
      required:
        - block_height
        - current_height
        - hash
        - size
        - timestamp
        - timestamp_utc
        - txs
    BlockDTO:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - fail
        data:
          description: payload data
          allOf:
            - $ref: "#/components/schemas/BlockEntity"
      required:
        - status
        - data
    BlockOutputsEntity:
      type: object
      properties:
        amount:
          type: number
        block_no:
          type: number
        in_mempool:
          type: boolean
        output_idx:
          type: number
        output_pubkey:
          type: string
        payment_id:
          type: string
        tx_hash:
          type: string
      required:
        - amount
        - block_no
        - in_mempool
        - output_idx
        - output_pubkey
        - tx_hash
    BlockOutputEntity:
      type: object
      properties:
        address:
          type: string
        height:
          type: number
        limit:
          type: number
        mempool:
          type: boolean
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/BlockOutputsEntity"
        viewkey:
          type: string
      required:
        - address
        - height
        - limit
        - mempool
        - outputs
        - viewkey
    BlockOutputsDTO:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - fail
        data:
          description: payload data
          allOf:
            - $ref: "#/components/schemas/BlockOutputEntity"
      required:
        - status
        - data
    RawBlockMinerVin:
      type: object
      properties:
        gen:
          type: object
          properties:
            height:
              required: true
              type: number
      required:
        - gen
    RawBlockMinerVout:
      type: object
      properties:
        amount:
          type: number
        target:
          type: object
          properties:
            key:
              required: true
              type: string
      required:
        - amount
        - target
    RawBlockMinerTx:
      type: object
      properties:
        extra:
          type: array
          items:
            type: number
        rct_signatures:
          type: object
          properties:
            type:
              required: true
              type: number
        unlock_time:
          type: number
        version:
          type: number
        vin:
          type: array
          items:
            $ref: "#/components/schemas/RawBlockMinerVin"
        vout:
          type: array
          items:
            $ref: "#/components/schemas/RawBlockMinerVout"
      required:
        - extra
        - rct_signatures
        - unlock_time
        - version
        - vin
        - vout
    RawBlockEntity:
      type: object
      properties:
        major_version:
          type: number
        miner_tx:
          $ref: "#/components/schemas/RawBlockMinerTx"
        minor_version:
          type: number
        nonce:
          type: number
        prev_id:
          type: string
        timestamp:
          type: number
        tx_hashes:
          type: array
          items:
            type: string
      required:
        - major_version
        - miner_tx
        - minor_version
        - nonce
        - prev_id
        - timestamp
        - tx_hashes
    RawBlockDTO:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - fail
        data:
          description: payload data
          allOf:
            - $ref: "#/components/schemas/RawBlockEntity"
      required:
        - status
        - data
